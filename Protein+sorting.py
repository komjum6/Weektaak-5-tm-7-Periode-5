
# coding: utf-8

# Vergelijken van excelsheets om dezelfde eiwitten tegen te komen in verschillende eiwitten

# Eerst worden de bestanden gelezen (KR, DD, mpk3, mpk6)

# In[43]:

import pandas as pd
import sys

desiredP = 0.05
desiredConf = 50

KR = pd.ExcelFile("KR.xlsx")
#print(KR.sheet_names)
df_kr = KR.parse("all detected proteins", parse_cols = "A,C,S", skiprows=2)
#print(df_kr["Protein code"][0])
#print(len(df_kr))


# In[44]:

DD = pd.ExcelFile("DD.xlsx")
#print(DD.sheet_names)
df_dd = DD.parse("all detected proteins", parse_cols = "A,C,S", skiprows=2)
#df_dd.head()
#print(df_dd)


# In[45]:

mpk3 = pd.ExcelFile("mpk3.xlsx")
#print(mpk3.sheet_names)
df_mpk3 = mpk3.parse("all detected proteins", parse_cols = "A,C,S", skiprows=2)
#df_mpk3.head()


# In[48]:

pd.options.display.max_columns = 3000
pd.options.display.max_rows = 3000
mpk6 = pd.ExcelFile("mpk6.xlsx")
#print(mpk6.sheet_names)
df_mpk6 = mpk6.parse("all detected proteins", parse_cols = "A,C,S", skiprows=2)
#df_mpk6.head()
#print(df_mpk6)


# Vind alle dezelfde eiwitten door te zoeken naar overeenkomende accessiecodes

# Als eerste zonder te filteren

# In[52]:

import re
Excellijst = [df_kr,df_dd,df_mpk3,df_mpk6]
VennLijstNietGefilterd = []
Excellijstnamen = ['df_kr','df_dd','df_mpk3','df_mpk6']
#y = 0

for x in Excellijst:
    #print(x.head())
    for y in range(len(x["Conf score"])):
        #print(x)
        if x["Anova (p)"][y] > desiredP or x["Conf score"][y] < desiredConf:
            x.drop(y,inplace=True)
	    #print(x["Anova (p)"][y]
            #print("slut")
    x.drop('Anova (p)',axis=1,inplace=True)
    x.drop('Conf score',axis=1,inplace=True)
#print(Excellijst)

#for x in Excellijst:
    string = ""
    for ding in str(x):
        string = string + ding
    #print(string)
    regex = r'([A-Z]\w+\.[123456789])'
    pattern = re.compile(regex) 
    accessiecodes = re.findall(pattern, string)
    #print('Dit is de', Excellijstnamen[y], 'lijst' ,accessiecodes)
    VennLijstNietGefilterd.append(accessiecodes)
    #y += 1


for item in range(len(VennLijstNietGefilterd)):
    filetje = open(Excellijstnamen[item]+"MetKR.txt",'w');
    for i in VennLijstNietGefilterd[item]:
        filetje.write(i+"\n")
        #i.to_csv(Excellijstnamen[item]+".csv",sep='\n')
    filetje.close()


# In[53]:

#for e in VennLijstNietGefilterd[3]:
    #print(e)

"""
df_kr_lijstje = ['ATCG00490.1', 'AT2G07732.1', 'ATMG00280.1', 'AT4G33010.1', 'AT4G33010.2', 'AT5G17920.1', 'AT2G43800.1', 'AT5G20980.1', 'AT2G26080.1', 'AT4G29060.1', 'AT4G29060.2', 'AT4G37930.1', 'AT5G26780.1', 'AT5G25980.2', 'AT5G25980.1', 'AT4G24280.1', 'AT3G29320.1', 'AT2G05710.1', 'AT3G52930.1', 'AT3G26650.1', 'AT2G36530.1', 'AT4G24620.1', 'AT4G24620.2', 'AT1G66200.1', 'AT1G66200.2', 'AT1G66200.3', 'AT1G79920.1', 'AT1G79930.1', 'AT3G08590.1', 'AT3G04120.1', 'AT3G46970.1', 'AT3G09840.1', 'AT3G53230.1', 'AT2G24200.1', 'AT2G24200.3', 'AT3G09820.1', 'AT3G09820.2', 'AT3G52880.1', 'AT1G57720.1', 'AT1G09780.1', 'AT4G20850.1', 'AT4G21280.1', 'AT4G21280.2', 'AT1G16080.1', 'AT5G04590.1', 'AT1G79550.1', 'AT3G15450.1', 'AT3G05180.1', 'AT3G10020.1', 'AT2G46440.1', 'AT5G49070.1', 'AT1G57980.1', 'AT2G43590.1', 'AT5G08380.1', 'AT5G15050.1', 'AT1G79790.1', 'AT3G01440.1', 'AT5G52960.1', 'AT5G16760.1', 'AT5G64250.1', 'AT2G37470.1', 'AT1G07790.1', 'AT3G53650.1', 'AT5G24400.1', 'AT2G41430.1', 'AT2G35410.1', 'AT5G15970.1', 'AT4G28300.1', 'AT1G11660.1', 'AT5G20250.4', 'AT5G20250.1', 'AT2G25070.1', 'AT5G21100.1', 'AT1G15930.1', 'AT1G15750.1', 'AT1G36320.1', 'AT1G49975.1', 'AT5G16840.1', 'AT1G53520.1']
df_dd_lijstje = ['AT1G66700.1', 'AT1G66690.1', 'AT1G66700.3', 'AT2G45220.1', 'AT4G02300.1', 'AT5G20830.1', 'AT5G63680.1', 'AT5G17990.1', 'AT2G02010.1', 'AT2G02000.1', 'AT3G24503.1', 'AT5G48540.1', 'AT5G38900.1', 'AT4G30530.1', 'AT4G30550.1', 'AT1G67980.1', 'AT1G67980.2', 'AT2G04400.1', 'AT2G29350.3', 'AT2G29350.1', 'AT5G54500.1', 'AT5G54500.2', 'AT2G21620.1', 'AT2G21620.2', 'AT5G20960.1', 'AT5G56350.1', 'AT4G26390.1', 'AT1G74590.1', 'AT1G26390.1', 'AT2G34810.1', 'AT5G39050.1', 'AT1G10700.1', 'AT5G05730.1', 'AT2G29690.1', 'AT5G05730.2', 'AT1G02930.1', 'AT1G18070.1', 'AT5G40760.1', 'AT2G24200.1', 'AT2G24200.3', 'AT3G13790.1', 'AT3G13790.2', 'AT3G02360.1', 'AT3G55410.1', 'AT3G16530.1', 'AT1G09130.3', 'AT1G09130.1', 'AT4G14100.1', 'AT1G63940.1', 'AT1G63940.2', 'AT1G63940.3', 'AT1G63940.4', 'AT5G07460.1', 'AT3G01120.1', 'AT4G05523.1', 'AT1G11860.1', 'AT5G58720.1', 'AT3G28720.1', 'AT1G10370.1', 'AT1G12520.1', 'AT1G12520.3', 'AT5G35790.1', 'AT3G10060.1', 'AT3G52300.1', 'AT4G25100.1', 'AT4G25100.4', 'AT4G37930.1', 'AT3G13920.1', 'AT3G13920.2', 'AT2G05920.1', 'AT1G16210.1', 'AT5G53380.1', 'AT5G18100.1', 'AT1G78060.1', 'AT2G20860.1', 'AT2G42530.1', 'AT4G21280.1', 'AT4G21280.2', 'AT5G55280.1', 'AT4G28490.1', 'AT5G02960.1', 'AT3G09680.1', 'AT3G15690.2', 'AT3G15690.1', 'AT1G01080.1', 'AT1G01080.2']
df_mpk3_lijstje = ['AT1G02930.1', 'AT5G48540.1', 'AT1G24190.1', 'AT5G38900.1', 'AT5G54500.1', 'AT5G54500.2', 'AT1G65970.1', 'AT1G60740.1', 'AT5G17990.1', 'AT4G02520.1', 'AT2G02930.1', 'AT5G39050.1', 'AT1G02920.1', 'AT1G23730.1', 'AT2G43590.1', 'AT2G04400.1', 'AT3G54640.1', 'AT2G24200.1', 'AT2G24200.3', 'AT4G36380.1', 'AT4G37910.1', 'AT2G43570.1', 'AT5G54810.1', 'AT5G11670.1', 'AT2G19900.1', 'AT2G01250.1', 'AT2G01250.2', 'AT1G21130.1', 'AT1G21130.2', 'AT2G02010.1', 'AT2G02000.1', 'AT5G17330.1', 'AT3G24503.1', 'AT3G14990.1', 'AT3G14990.2', 'AT5G59420.1', 'AT3G09300.1', 'AT3G16530.1', 'AT2G37760.1', 'AT2G37760.3', 'AT2G29350.1', 'AT2G36580.1', 'AT4G38510.1', 'AT1G06000.1', 'AT2G17265.1', 'AT4G28706.1', 'AT2G19730.1', 'AT4G29410.1', 'AT1G66100.1', 'AT1G49980.1', 'AT4G15210.1', 'AT4G15210.2', 'AT1G20620.1', 'AT1G20620.2', 'AT1G20620.4', 'AT3G19130.1', 'AT3G18890.1', 'AT3G11940.1', 'AT2G37270.1', 'AT4G33640.1', 'AT4G19410.1', 'AT4G19410.2', 'AT4G00620.1', 'AT1G79720.1', 'AT1G07700.1', 'AT1G07700.3', 'AT3G11510.1', 'AT3G52580.1', 'AT2G37190.1', 'AT3G53430.1', 'AT5G60670.1', 'AT4G25100.1', 'AT4G25100.4', 'AT3G53740.1', 'AT2G37600.1', 'AT3G45140.1', 'AT5G63380.1', 'AT5G38480.1', 'AT5G38480.2', 'AT5G58250.1', 'AT5G03350.1', 'AT2G42910.1', 'AT4G30870.1', 'AT2G42130.3', 'AT4G27000.1']
df_mpk6_lijstje = ['AT5G17870.1', 'ATCG00830.1', 'AT2G38230.1', 'AT2G38210.1', 'AT3G16050.1', 'AT4G39800.1', 'AT2G22240.1', 'AT3G13460.1', 'AT3G13460.3', 'AT3G13460.4', 'AT5G61020.1', 'ATCG00780.1', 'AT1G02930.1', 'AT5G13510.1', 'AT3G24503.1', 'AT1G02920.1', 'AT2G43030.1', 'AT5G49030.3', 'AT5G49030.2', 'ATCG01120.1', 'ATCG00660.1', 'AT4G34620.1', 'AT2G05710.1', 'AT1G05190.1', 'AT1G05010.1', 'AT1G69740.1', 'AT1G44318.1', 'AT3G48560.1', 'AT3G26740.1', 'AT3G51160.1', 'AT5G66280.1', 'AT1G74970.1', 'AT3G56910.1', 'AT3G09840.1', 'AT3G53230.1', 'AT5G13650.1', 'AT5G20720.1', 'AT1G37130.1', 'AT3G27160.1', 'ATCG00790.1', 'AT2G28830.1', 'AT3G12930.1', 'AT1G54630.1', 'AT1G70890.1', 'AT1G70410.1', 'AT1G23730.1', 'AT2G42810.1', 'AT2G42810.2', 'AT1G05560.1', 'AT2G20890.1', 'AT3G20970.1', 'AT3G20970.2', 'AT2G45300.1', 'AT3G07310.1', 'AT1G12050.1', 'AT3G11710.1', 'AT5G03350.1', 'AT3G58990.1', 'AT4G00620.1', 'AT4G00600.1', 'AT4G34120.1', 'AT1G27385.2', 'AT1G27385.1', 'AT1G27385.4', 'AT1G54580.1', 'AT3G51000.1', 'AT3G10520.1', 'AT5G63570.1', 'AT5G65010.2', 'AT3G47340.1', 'AT5G10240.2', 'AT5G65010.1', 'AT1G74990.1', 'AT3G05180.1', 'AT1G13320.1', 'AT1G48850.1', 'AT1G48850.2', 'AT3G55040.1', 'AT3G47560.2', 'AT3G47590.1', 'AT3G47100.1', 'AT4G13360.1']
"""
df_kr_lijstje = VennLijstNietGefilterd[0]
df_dd_lijstje = VennLijstNietGefilterd[1]
df_mpk3_lijstje = VennLijstNietGefilterd[2]
df_mpk6_lijstje = VennLijstNietGefilterd[3] 


df_dd_lijstje = [c for c in df_dd_lijstje if c not in df_kr_lijstje]
df_mpk3_lijstje = [c for c in df_mpk3_lijstje if c not in df_kr_lijstje]
df_mpk6_lijstje = [c for c in df_mpk6_lijstje if c not in df_kr_lijstje]

print(len(df_dd_lijstje))

vennStuff = [df_dd_lijstje,df_mpk3_lijstje,df_mpk6_lijstje]
vennNames = ["df_dd_lijstje","df_mpk3_lijstje","df_mpk6_lijstje"]
for item in range(len(vennStuff)):
    filetje = open(vennNames[item]+"ZonderKR.txt",'w');
    for i in vennStuff[item]:
        filetje.write(i+"\n")
        #i.to_csv(Excellijstnamen[item]+".csv",sep='\n')
    filetje.close()

sys.exit()

#print("Dit is df_kr_eiwitten")    
for e in df_kr_lijstje:
    #print(e)
    pass
#print("Dit is df_dd_eiwitten")
for f in df_dd_lijstje:
    #print(f)
    pass
#print("Dit is df_mpk3_eiwitten")
for g in df_mpk3_lijstje:
    #print(g)
    pass
#print("Dit is df_mpk6_eiwitten")
for h in df_mpk6_lijstje:
    #print(h)    
    pass
    

sys.exit()
# In[29]:

aantal = 0
for u in Excellijst:
    tellen = u['Anova (p)']
    for entry in tellen:
        aantal += 1
#print(aantal)


# Megalijsten

# In[21]:

Aantal = 0
Ultieme_protein_lijst = []
for p in Excellijst:
    prot = p["Protein code"]
    for protein in prot:
        Ultieme_protein_lijst.append(protein)
        Aantal += 1
#print("Dit is het aantal Eiwitten zonder filteren :" ,Aantal)

Aantal = 0
Anova_index = 0

Ultieme_Anova_lijst =[]
for an in Excellijst:
    anno = an["Anova (p)"]
    for anovaatje in anno:
        if anovaatje > 0.01:
            Ultieme_Anova_lijst.append(anovaatje)
            Aantal += 1
#print("Dit is het aantal Eiwitten gefilterd op Anova p-waarde boven 0.01 :" ,Aantal)

Aantal = 0
Confindex = 0

Ultieme_Conf_lijst =[]
for confje in Excellijst:
    confjescore = confje["Conf score"]
    for confie in confjescore:
        if confie > 50:
            Ultieme_Conf_lijst.append(confie)
            Aantal += 1
#print("Dit is het aantal Eiwitten gefilterd op confidence waardes boven 50 :" ,Aantal)


# In[87]:

Aantal = 0
Ultieme_protein_lijst = []
for p in Excellijst:
    prot = p["Protein code"]
    for protein in prot:
        Ultieme_protein_lijst.append(protein)
        Aantal += 1
#print("Dit is het aantal Eiwitten zonder filteren" ,Aantal)

Aantal = 0
Anova_index = []

Ultieme_Anova_lijst =[]
for an in Excellijst:
    anno = an["Anova (p)"]
    for anovaatje in anno:
        if anovaatje > 0.01:
            Ultieme_Anova_lijst.append(anovaatje)
            Anova_index.append(Ultieme_Anova_lijst.index(anovaatje))
            Aantal += 1
#print("Dit is het aantal Eiwitten gefilterd op Anova p-waarde boven 0.01" ,Aantal)

Aantal = 0
Confindex = []

Ultieme_Conf_lijst =[]
for confje in Excellijst:
    confjescore = confje["Conf score"]
    for confie in confjescore:
        if confie > 50:
            Ultieme_Conf_lijst.append(confie)
            Confindex.append(Ultieme_Conf_lijst.index(confie))
            Aantal += 1
#print("Dit is het aantal Eiwitten gefilterd op confidence waardes boven 50" ,Aantal)

Hulplist1 = [c for c in Anova_index if c in Confindex]

Hulplist2 = [c for c in Anova_index if c not in Confindex]
for element in Hulplist1:
    Ultieme_protein_lijst[element] = 0
for element in Hulplist2:
    Ultieme_protein_lijst[element] = 0

nieuwe_lijst = []
for dingetje in Ultieme_protein_lijst:
    if dingetje != 0:
        nieuwe_lijst.append(dingetje)

#print(nieuwe_lijst)


# Ik heb een lijst met alle eiwitten per excelfile.
# Ik heb een lijst met alle eiwitten in het totaal, die gefilterd is.
# Zoek uit welke eiwitten overeenkomen met iedere lijst van eiwitten (die per excelfile). 
# -Je hebt dan welke gefilterde eiwitten voorkomen in welke excelfile.
# Hier moeten nieuwe lijsten van gemaakt worden met concensusproteoom en unieke eiwitten.

# In[11]:

import re
df_kr_eiwitten = ['ATCG00490.1', 'AT2G07732.1', 'ATMG00280.1', 'AT4G33010.1', 'AT4G33010.2', 'AT5G17920.1', 'AT2G43800.1', 'AT5G20980.1', 'AT2G26080.1', 'AT4G29060.1', 'AT4G29060.2', 'AT4G37930.1', 'AT5G26780.1', 'AT5G25980.2', 'AT5G25980.1', 'AT4G24280.1', 'AT3G29320.1', 'AT2G05710.1', 'AT3G52930.1', 'AT3G26650.1', 'AT2G36530.1', 'AT4G24620.1', 'AT4G24620.2', 'AT1G66200.1', 'AT1G66200.2', 'AT1G66200.3', 'AT1G79920.1', 'AT1G79930.1', 'AT3G08590.1', 'AT3G04120.1', 'AT3G46970.1', 'AT3G09840.1', 'AT3G53230.1', 'AT2G24200.1', 'AT2G24200.3', 'AT3G09820.1', 'AT3G09820.2', 'AT3G52880.1', 'AT1G57720.1', 'AT1G09780.1', 'AT4G20850.1', 'AT4G21280.1', 'AT4G21280.2', 'AT1G16080.1', 'AT3G15450.1', 'AT3G05180.1', 'AT3G10020.1', 'AT2G46440.1', 'AT5G49070.1', 'AT1G57980.1', 'AT2G43590.1', 'AT5G08380.1', 'AT5G15050.1', 'AT1G79790.1', 'AT3G01440.1', 'AT5G52960.1', 'AT5G16760.1', 'AT5G64250.1', 'AT2G37470.1', 'AT1G07790.1', 'AT3G53650.1', 'AT5G24400.1', 'AT2G41430.1', 'AT2G35410.1', 'AT5G15970.1', 'AT4G28300.1', 'AT1G11660.1', 'AT5G20250.4', 'AT5G20250.1', 'AT2G25070.1', 'AT5G21100.1', 'AT1G15930.1', 'AT1G15750.1', 'AT1G36320.1', 'AT1G49975.1', 'AT5G16840.1', 'AT1G53520.1'] 
df_dd_eiwitten = ['AT1G66700.1', 'AT1G66690.1', 'AT1G66700.3', 'AT2G45220.1', 'AT4G02300.1', 'AT5G20830.1', 'AT5G63680.1', 'AT5G17990.1', 'AT2G02010.1', 'AT2G02000.1', 'AT3G24503.1', 'AT5G48540.1', 'AT5G38900.1', 'AT4G30530.1', 'AT4G30550.1', 'AT1G67980.1', 'AT1G67980.2', 'AT2G04400.1', 'AT2G29350.3', 'AT2G29350.1', 'AT5G54500.1', 'AT5G54500.2', 'AT2G21620.1', 'AT2G21620.2', 'AT5G20960.1', 'AT5G56350.1', 'AT4G26390.1', 'AT1G74590.1', 'AT1G26390.1', 'AT2G34810.1', 'AT5G39050.1', 'AT1G10700.1', 'AT5G05730.1', 'AT2G29690.1', 'AT5G05730.2', 'AT1G02930.1', 'AT1G18070.1', 'AT5G40760.1', 'AT2G24200.1', 'AT2G24200.3', 'AT3G13790.1', 'AT3G13790.2', 'AT3G02360.1', 'AT1G09130.3', 'AT1G09130.1', 'AT4G14100.1', 'AT1G63940.1', 'AT1G63940.2', 'AT1G63940.3', 'AT1G63940.4', 'AT5G07460.1', 'AT3G01120.1', 'AT4G05523.1', 'AT1G11860.1', 'AT5G58720.1', 'AT3G28720.1', 'AT1G10370.1', 'AT1G12520.1', 'AT1G12520.3', 'AT5G35790.1', 'AT3G10060.1', 'AT3G52300.1', 'AT4G25100.1', 'AT4G25100.4', 'AT4G37930.1', 'AT3G13920.1', 'AT3G13920.2', 'AT2G05920.1', 'AT1G16210.1', 'AT5G53380.1', 'AT5G18100.1', 'AT1G78060.1', 'AT2G20860.1', 'AT2G42530.1', 'AT4G21280.1', 'AT4G21280.2', 'AT5G55280.1', 'AT4G28490.1', 'AT5G02960.1', 'AT3G09680.1', 'AT3G15690.2', 'AT3G15690.1', 'AT1G01080.1', 'AT1G01080.2']
df_mpk3_eiwitten = ['AT1G02930.1', 'AT5G48540.1', 'AT1G24190.1', 'AT5G38900.1', 'AT5G54500.1', 'AT5G54500.2', 'AT1G65970.1', 'AT1G60740.1', 'AT5G17990.1', 'AT4G02520.1', 'AT2G02930.1', 'AT5G39050.1', 'AT1G02920.1', 'AT1G23730.1', 'AT2G43590.1', 'AT2G04400.1', 'AT3G54640.1', 'AT2G24200.1', 'AT2G24200.3', 'AT4G36380.1', 'AT4G37910.1', 'AT2G43570.1', 'AT5G54810.1', 'AT5G11670.1', 'AT2G19900.1', 'AT2G01250.1', 'AT2G01250.2', 'AT1G21130.1', 'AT1G21130.2', 'AT2G02010.1', 'AT2G02000.1', 'AT5G17330.1', 'AT3G24503.1', 'AT3G14990.1', 'AT3G14990.2', 'AT5G59420.1', 'AT3G09300.1', 'AT3G16530.1', 'AT2G37760.1', 'AT2G37760.3', 'AT4G38510.1', 'AT1G06000.1', 'AT2G17265.1', 'AT4G28706.1', 'AT2G19730.1', 'AT4G29410.1', 'AT1G66100.1', 'AT1G49980.1', 'AT4G15210.1', 'AT4G15210.2', 'AT1G20620.1', 'AT1G20620.2', 'AT1G20620.4', 'AT3G19130.1', 'AT3G18890.1', 'AT3G11940.1', 'AT2G37270.1', 'AT4G33640.1', 'AT4G19410.1', 'AT4G19410.2', 'AT4G00620.1', 'AT1G79720.1', 'AT1G07700.1', 'AT1G07700.3', 'AT3G11510.1', 'AT3G52580.1', 'AT2G37190.1', 'AT3G53430.1', 'AT5G60670.1', 'AT4G25100.1', 'AT4G25100.4', 'AT3G53740.1', 'AT2G37600.1', 'AT3G45140.1', 'AT5G63380.1', 'AT5G38480.1', 'AT5G38480.2', 'AT5G58250.1', 'AT5G03350.1', 'AT2G42910.1', 'AT4G30870.1', 'AT2G42130.3', 'AT4G27000.1']
df_mpk6_eiwitten = ['AT5G17870.1', 'ATCG00830.1', 'AT2G38230.1', 'AT2G38210.1', 'AT3G16050.1', 'AT4G39800.1', 'AT2G22240.1', 'AT3G13460.1', 'AT3G13460.3', 'AT3G13460.4', 'AT5G61020.1', 'ATCG00780.1', 'AT1G02930.1', 'AT5G13510.1', 'AT3G24503.1', 'AT1G02920.1', 'AT2G43030.1', 'AT5G49030.3', 'AT5G49030.2', 'ATCG01120.1', 'ATCG00660.1', 'AT4G34620.1', 'AT2G05710.1', 'AT1G05190.1', 'AT1G05010.1', 'AT1G69740.1', 'AT1G44318.1', 'AT3G48560.1', 'AT3G26740.1', 'AT3G51160.1', 'AT5G66280.1', 'AT1G74970.1', 'AT3G56910.1', 'AT3G09840.1', 'AT3G53230.1', 'AT5G13650.1', 'AT5G20720.1', 'AT1G37130.1', 'AT3G12930.1', 'AT1G54630.1', 'AT1G70890.1', 'AT1G70410.1', 'AT1G23730.1', 'AT2G42810.1', 'AT2G42810.2', 'AT1G05560.1', 'AT2G20890.1', 'AT3G20970.1', 'AT3G20970.2', 'AT2G45300.1', 'AT3G07310.1', 'AT1G12050.1', 'AT3G11710.1', 'AT5G03350.1', 'AT3G58990.1', 'AT4G00620.1', 'AT4G00600.1', 'AT4G34120.1', 'AT1G27385.2', 'AT1G27385.1', 'AT1G27385.4', 'AT1G54580.1', 'AT3G51000.1', 'AT3G10520.1', 'AT5G63570.1', 'AT5G65010.2', 'AT3G47340.1', 'AT5G10240.2', 'AT5G65010.1', 'AT1G74990.1', 'AT3G05180.1', 'AT1G13320.1', 'AT1G48850.1', 'AT1G48850.2', 'AT3G55040.1', 'AT3G47560.2', 'AT3G47590.1', 'AT3G47100.1', 'AT4G13360.1']

regextje = r'([A-Z]\w+\.[1234])'
patterntje = re.compile(regextje) 
Lange_string = ""
samengevoegd = ['AT2G45790.1', 'AT5G59160.1;AT2G29400.1', 'AT3G05350.1', 'AT1G47200.1', 'AT5G07470.1', 'AT2G24140.1', 'AT4G33090.1', 'AT1G04830.1', 'AT2G28305.1', 'AT4G31570.1', 'AT1G76030.1;AT1G20260.1;AT4G38510.1', 'AT2G33845.1', 'AT4G32520.1', 'AT3G23600.1;AT3G23600.2', 'AT1G80560.1', 'AT3G56240.1', 'AT3G01440.1', 'AT3G14420.1;AT3G14420.3;AT3G14420.4;AT3G14420.5;AT4G18360.2', 'AT1G76730.1', 'AT4G24280.1', 'AT4G24220.1;AT4G24220.2', 'AT4G38810.1;AT4G38810.2', 'AT5G27630.1', 'AT5G40820.1', 'AT5G49760.1', 'AT3G05020.1', 'AT5G59420.1', 'AT4G29670.2;AT4G29670.1', 'AT3G52900.1', 'AT1G71920.2;AT1G71920.1', 'AT1G76970.1', 'AT2G27860.1', 'AT2G35940.1', 'AT2G34590.1', 'AT5G51820.1', 'AT4G36020.1', 'AT3G04650.1', 'AT2G33450.1', 'AT5G17990.1', 'AT4G12880.1', 'AT5G48770.1', 'AT3G01910.1;AT3G01910.2', 'AT3G56070.1', 'AT1G24180.1', 'AT5G42650.1', 'AT1G79690.1', 'AT5G64130.1', 'AT3G02520.1', 'AT5G52970.1', 'AT1G26550.1', 'AT4G24820.1', 'AT2G25450.1', 'AT2G43550.1', 'AT2G07734.1', 'AT4G25210.1', 'AT5G64050.1', 'AT4G19880.1;AT5G45020.1', 'AT3G04600.2;AT3G04600.1', 'AT4G32915.1', 'AT5G48960.1', 'AT1G35420.1', 'AT5G48230.2;AT5G48230.1', 'AT5G20500.1', 'AT1G07440.1', 'AT1G79920.1;AT1G79920.2', 'AT3G55330.1', 'AT3G52960.1', 'AT4G37800.1', 'AT2G38040.1', 'AT5G55160.1;AT5G55160.2', 'AT3G16470.1;AT3G16470.3', 'AT5G65930.1', 'AT5G15970.1', 'AT1G74050.1;AT1G18540.1;AT1G74060.1', 'AT3G24495.1', 'AT5G38980.1', 'AT2G17200.1', 'AT5G58490.1', 'AT3G10410.1', 'AT2G27510.1', 'AT1G52530.1', 'AT5G49940.1', 'AT4G05530.1', 'AT4G39120.1', 'AT1G78900.1', 'AT4G15530.1', 'AT5G21160.1', 'AT4G11600.1', 'AT3G55800.1', 'AT2G43100.1', 'AT5G64370.1', 'AT1G56050.1', 'AT5G48930.1', 'AT1G63750.3', 'AT1G75040.1', 'AT5G42765.1', 'AT3G61440.1;AT3G61440.2', 'AT3G02730.1', 'AT2G36350.1', 'AT3G05590.1;AT5G27850.1', 'AT3G59990.1', 'AT1G55260.1', 'AT4G18100.1', 'AT1G24360.1', 'AT2G17930.1', 'AT5G26240.1', 'AT4G10480.1', 'AT1G55480.1', 'AT5G16715.1', 'AT1G72370.1;AT3G04770.1', 'AT2G43710.1;AT5G16240.1', 'AT1G51100.1', 'AT5G51700.1', 'AT3G01390.1', 'AT3G59870.1', 'AT1G17290.1', 'AT4G31930.1', 'AT1G16880.1;AT1G16880.2', 'AT2G42550.1', 'AT2G43820.1', 'AT1G64510.1', 'AT5G60980.1', 'AT1G17720.1', 'AT2G25840.1', 'AT5G53140.1', 'AT1G35530.2;AT1G35530.1', 'AT3G45300.1', 'AT2G47510.1', 'AT4G32750.1', 'AT1G74900.1', 'AT4G12060.1', 'AT4G38970.1;AT4G38970.2', 'AT4G33670.1', 'AT1G21065.1', 'AT1G47420.1', 'AT1G11475.1', 'AT4G39340.1', 'AT4G28750.1', 'AT3G18060.1;AT2G01330.1', 'AT5G57655.2;AT5G57655.1', 'AT1G23820.1;AT1G23820.2', 'AT4G30270.1', 'AT2G21250.1;AT2G21250.2', 'AT3G50070.1', 'AT3G10090.1', 'ATCG01060.1', 'AT3G19450.1', 'AT3G10680.1', 'AT2G22990.3', 'AT5G63400.1;AT5G63400.2', 'AT2G21060.1', 'AT1G50380.1', 'AT5G61780.1', 'AT5G09650.1', 'AT4G11980.1', 'AT5G19860.1', 'AT2G38140.1', 'AT3G06350.1', 'AT1G74960.1', 'AT2G21620.1;AT2G21620.2', 'AT3G50440.1', 'AT3G01520.1;AT5G14680.1', 'AT5G08260.1', 'AT1G03090.2', 'AT5G58590.1', 'AT2G40060.1', 'AT3G57890.1;AT3G57890.2', 'AT3G52990.1;AT2G36580.1;AT3G52990.2', 'AT4G34730.1', 'AT1G17100.1', 'AT3G03250.1', 'AT5G63890.2', 'AT3G19420.1', 'AT3G58680.1', 'AT5G45680.1', 'AT5G64380.1', 'AT5G16510.1', 'AT4G16720.1', 'AT4G36630.1', 'ATCG00380.1', 'AT3G63170.1', 'AT1G64260.1', 'AT5G15010.1', 'AT2G05830.1', 'AT2G37550.1', 'AT2G07170.1', 'AT2G44160.1', 'AT2G22450.1', 'AT1G26420.1', 'AT4G33780.1', 'AT1G54780.1', 'AT5G11680.1', 'AT1G79440.1', 'AT3G27700.1', 'AT5G10240.1', 'AT4G08870.1;AT4G08870.2', 'AT1G58230.1', 'AT4G13965.1', 'AT3G23920.1', 'AT1G49760.1', 'AT4G02620.1', 'AT5G09550.1', 'AT4G14160.2', 'AT3G60880.1', 'AT1G49670.1;AT1G49670.2', 'AT5G35100.1;AT5G35100.2', 'AT5G23440.1', 'AT3G19480.1', 'AT1G55090.1', 'AT5G25460.1', 'AT4G19210.1', 'AT4G29350.1', 'AT1G09795.1', 'AT4G25050.1', 'AT4G03200.1', 'AT3G16520.3;AT3G16520.1', 'AT5G10920.1', 'AT1G60550.1', 'AT2G29700.1', 'AT3G11250.1;AT2G40010.1;AT3G09200.1', 'AT2G20260.1', 'AT5G59950.1', 'AT1G73530.1', 'AT1G70310.1', 'AT4G03000.1', 'AT1G12520.2;AT1G12520.1', 'AT4G26840.1', 'AT5G67400.1', 'AT4G25080.1', 'AT1G45110.1', 'AT3G25690.1', 'AT3G59760.1;AT3G59760.2', 'AT5G24165.1', 'AT4G14800.1', 'AT1G52400.1;AT1G52400.2', 'AT4G11820.2;AT4G11820.1', 'AT1G72680.1', 'AT1G13060.1;AT1G13060.2', 'AT3G53970.1', 'AT4G09010.1', 'AT4G29750.1', 'AT2G16600.1;AT2G16600.2', 'AT5G59750.1;AT5G59750.2', 'AT4G05180.1', 'AT1G01800.1;AT1G01800.2', 'AT1G71860.1', 'AT4G18700.1', 'AT1G14030.1', 'AT3G21055.1', 'AT5G28060.1;AT3G04920.1', 'AT1G06000.1', 'AT5G47210.1;AT4G16830.1;AT5G47210.2;AT5G47210.3', 'AT5G48540.1', 'AT2G40600.1', 'AT1G78870.2;AT1G16890.1;AT1G78870.1', 'AT3G53020.1', 'AT5G58330.1;AT5G58330.2;AT5G58330.3', 'AT5G16710.1', 'AT1G16540.1', 'AT2G42500.1;AT1G10430.1;AT2G42500.2;AT2G42500.3', 'AT5G02230.1', 'AT4G02530.1', 'AT5G50850.1', 'ATCG00640.1', 'AT3G44310.1;AT3G44300.1;AT3G44310.2;AT3G44320.1;AT5G22300.1', 'AT2G31320.1', 'AT1G23740.1', 'AT4G24580.1', 'AT5G66570.1', 'AT1G20620.1;AT1G20620.2;AT1G20620.4;AT1G20620.5', 'AT3G46520.1;AT2G37620.1', 'AT3G05730.1', 'AT4G37000.1', 'AT1G11930.1', 'AT1G78680.1;AT1G78680.2', 'AT3G26650.1', 'AT5G17920.1', 'AT2G29960.2', 'ATCG00480.1', 'AT3G22200.2;AT3G22200.1', 'AT4G27440.1;AT5G54190.1', 'AT4G01610.1', 'AT5G36230.1', 'AT4G19410.1;AT4G19410.2', 'AT3G62530.1', 'AT3G16420.1;AT3G16430.1', 'AT2G30870.1', 'AT5G05730.1;AT2G29690.1;AT3G55870.1', 'AT2G09990.1', 'AT1G21720.1;AT1G77440.1', 'AT5G48340.1', 'AT1G26670.1', 'AT4G17100.1;AT4G17100.2', 'AT5G57870.1', 'AT1G12210.1;AT1G12220.1', 'AT4G14960.2;AT1G04820.1;AT1G64740.1;AT4G14960.1', 'AT4G14147.1', 'AT5G49980.1', 'AT5G60000.1', 'AT5G07350.1;AT5G07350.2', 'AT1G18490.1', 'AT1G03680.1', 'AT4G01210.1', 'AT2G01250.1', 'AT1G77490.1', 'AT1G22410.1', 'AT1G78830.1', 'AT4G21540.2;AT4G21540.1', 'AT2G32060.1', 'AT3G56340.1;AT2G40510.1', 'AT2G43560.1', 'AT5G14780.1', 'AT3G54960.1', 'AT5G51720.1', 'AT3G24430.1', 'AT5G19950.3;AT5G19950.1', 'AT2G36390.1', 'AT4G20960.1', 'AT1G05920.1', 'AT4G35450.1;AT4G35450.4;AT4G35450.5', 'AT3G17020.1', 'AT3G20790.1', 'AT5G66120.2;AT5G66120.1', 'AT5G45390.1', 'AT2G43530.1', 'AT3G14310.1;AT1G53830.1', 'AT3G20820.1', 'AT5G22320.1', 'AT2G43945.1', 'AT5G41850.1', 'AT2G23010.1', 'AT5G56010.1', 'AT3G17210.1', 'AT4G09650.1', 'AT1G06630.1', 'AT1G13270.1;AT1G13270.2', 'AT1G14610.1', 'AT3G08580.1', 'AT4G27960.2;AT1G64230.1;AT5G41700.3', 'AT5G64200.1', 'AT1G32160.1', 'AT1G30630.1', 'AT2G25730.1', 'AT3G52200.2', 'AT4G08900.1', 'AT3G62910.1', 'AT3G48990.1', 'AT1G35160.1;AT1G35160.2', 'AT5G43310.1', 'AT4G17040.1', 'AT1G29150.1', 'AT3G01500.3', 'AT1G54290.1', 'AT3G19000.1', 'AT4G14430.1', 'AT4G14300.1', 'AT2G21330.1;AT2G21330.2;AT2G21330.3', 'AT5G52100.1', 'AT1G20810.1', 'AT1G53635.1', 'AT1G12250.2;AT1G12250.1', 'AT1G78850.1;AT1G78860.1', 'AT2G40840.1', 'AT1G31190.1', 'AT3G10920.1', 'AT1G80360.1', 'AT5G24780.1;AT5G24780.2', 'AT2G29450.1;AT2G29440.1;AT2G29470.1;AT2G29480.1', 'AT1G16350.1;AT1G79470.1', 'AT4G17300.1', 'AT1G67900.1', 'AT3G14390.1', 'AT5G37830.1', 'AT3G53110.1', 'AT4G38680.1', 'AT4G12420.1', 'AT4G14030.1', 'AT3G18290.1', 'AT1G66130.1', 'AT1G04420.1', 'AT4G39200.1', 'AT2G44060.1', 'AT5G67360.1', 'AT1G50200.1;AT1G50200.2', 'AT5G43010.1;AT1G45000.1', 'AT2G19760.1', 'AT1G51405.1', 'AT3G47836.1', 'AT5G25310.1', 'AT5G48880.2;AT1G04710.1', 'AT1G09010.1', 'AT5G57890.1', 'AT2G42790.1', 'AT3G16910.1', 'AT1G80480.1;AT1G15730.1', 'AT1G60950.1', 'AT4G23460.1;AT4G11380.1', 'AT2G44040.1;AT3G59890.1', 'AT5G16880.1', 'AT3G22890.1', 'AT3G24820.1', 'AT3G12490.1', 'AT4G03520.1;AT4G03520.2', 'AT1G22630.1', 'AT4G37930.1', 'AT2G14740.1;AT2G14720.1', 'AT2G32520.1', 'AT1G66680.1', 'AT3G63190.1', 'AT1G22430.1', 'AT4G33520.2;AT4G33520.3', 'AT1G53280.1', 'AT1G60710.1;AT1G60680.1;AT1G60730.2', 'AT1G03130.1;AT4G02770.1', 'AT1G62260.1', 'AT1G02890.1', 'AT1G23310.1;AT1G23310.2', 'AT2G32730.1;AT1G04810.1', 'AT3G02360.1', 'AT5G35630.1', 'AT1G15690.1', 'AT3G55260.1', 'AT5G58710.1', 'AT5G37050.1', 'AT1G31170.1;AT1G31170.4', 'AT5G22010.1', 'AT4G30310.2;AT4G30310.1;AT4G30310.3', 'AT2G04700.1', 'AT5G49810.1', 'AT5G64650.1', 'AT2G07698.1;ATMG01190.1', 'AT3G47520.1', 'AT4G38800.1', 'AT1G33390.1', 'AT5G40370.1;AT5G40370.2', 'AT2G30200.2', 'AT5G42790.1;AT1G47250.1', 'AT3G61540.1', 'AT1G27400.1;AT1G67430.2', 'AT3G48170.1', 'AT1G78300.1', 'AT5G62780.1', 'AT3G45140.1', 'AT5G37475.1', 'AT3G01510.1', 'AT5G21100.1', 'AT4G16165.1', 'AT2G30110.1;AT5G06460.1', 'AT5G20430.1', 'AT3G20390.1', 'AT1G48860.1;AT1G48860.2', 'AT4G03080.1;AT1G08420.1;AT2G27210.1', 'AT3G07100.1', 'AT1G26160.1', 'AT4G36650.1', 'AT2G01510.1', 'AT1G18270.1', 'AT3G59920.1', 'AT2G17420.1', 'AT3G04550.1', 'AT1G67700.3;AT1G67700.1', 'AT3G53990.1', 'AT2G26930.1', 'AT4G31140.1', 'AT5G43830.1', 'AT5G37540.1', 'AT4G01940.1', 'AT3G02760.1', 'AT4G26555.1', 'AT1G03620.1', 'AT5G15350.1', 'AT1G65960.2;AT2G02000.1;AT3G17760.1;AT5G17330.1', 'AT4G25840.1;AT5G57440.1', 'AT1G78915.2', 'AT4G23100.1', 'AT3G53590.1', 'AT5G66760.1;AT2G18450.1', 'AT3G09820.1;AT3G09820.2', 'AT3G26720.1', 'AT3G59980.1', 'AT4G18370.1', 'AT3G48000.1;AT1G23800.1', 'AT1G06650.2;AT1G06640.1;AT1G06645.1', 'AT4G27320.1', 'AT5G04800.1;AT2G04390.1;AT2G05220.1', 'AT2G21170.1;AT2G21170.2', 'AT4G03280.1', 'AT5G11200.3;AT5G11170.2;AT5G11200.2', 'AT3G23570.1', 'AT5G13410.1', 'AT4G34180.1', 'AT1G06130.2;AT1G06130.1', 'AT2G04039.1;AT2G04039.3', 'AT5G41210.1', 'AT2G42600.1', 'AT5G54960.1', 'AT5G54500.1;AT5G54500.2', 'AT2G03390.1', 'AT5G35530.1', 'AT5G39830.1', 'AT1G14320.1;AT1G14320.2;AT1G26910.1', 'AT5G63860.1', 'AT5G63800.1', 'AT5G23310.1', 'AT3G23990.1', 'AT1G80460.1', 'AT4G10320.1', 'AT3G22380.1', 'AT5G38480.1;AT5G38480.2', 'AT3G52180.1;AT3G52180.2', 'AT5G46750.1', 'AT3G56490.1', 'AT4G02450.1', 'AT1G78370.1', 'AT5G09510.1;AT5G09500.1;AT5G09510.2', 'AT5G23140.1', 'AT5G57040.1', 'AT1G22530.1', 'AT3G55440.1', 'AT5G08570.1;AT5G63680.1', 'AT1G67280.1;AT1G67280.2', 'AT2G24020.2;AT4G30620.1', 'AT4G17740.1', 'AT3G56840.1', 'AT5G61510.1', 'AT5G66040.1;AT5G66040.2', 'AT4G25170.2', 'AT4G38220.2;AT4G38220.1', 'AT5G53480.1', 'AT4G02660.1', 'AT2G37790.1;AT2G37770.2', 'AT5G24770.1;AT5G24770.2', 'AT3G54140.1', 'AT1G31812.1', 'AT1G17860.1', 'AT1G79040.1', 'AT4G23600.1;AT4G23600.2;AT4G23600.3', 'AT1G01050.1;AT2G46860.1', 'AT5G43960.2;AT5G43960.1', 'AT4G05420.1', 'AT3G61220.1;AT2G24190.1', 'ATCG00420.1', 'AT1G29020.1', 'AT4G33010.1;AT4G33010.2', 'AT1G31910.2;AT1G31910.1', 'AT4G16760.1;AT2G35690.1', 'AT2G21530.1', 'AT2G26540.1', 'AT2G24580.1', 'AT3G02770.1;AT5G16450.1', 'AT1G52980.1', 'AT3G47670.1', 'AT1G20225.1', 'AT2G04690.1', 'AT2G18230.1', 'AT4G10300.1', 'AT1G79500.1;AT1G79500.5', 'AT1G06680.2;AT1G06680.1', 'AT4G31300.1', 'AT2G22780.1', 'AT2G17360.1;AT2G17360.2;AT5G58420.1', 'AT1G30230.1;AT1G30230.2', 'AT2G30970.1', 'AT2G20270.1;AT2G20270.2', 'AT3G15520.1', 'AT5G62530.1', 'AT5G40290.1', 'AT4G17530.1;AT5G47200.1', 'AT2G33150.1', 'AT3G58010.1', 'AT1G62740.1', 'AT3G43800.1', 'AT3G08030.1', 'AT1G07110.1', 'AT4G23810.1', 'AT1G32500.1', 'AT1G33590.1', 'AT1G66240.1;AT1G66240.2', 'AT3G02080.1;AT5G15520.1', 'AT1G43560.1', 'AT5G14590.1', 'AT1G80600.1', 'AT3G15660.1', 'AT5G16390.2;AT5G15530.1;AT5G16390.1', 'AT3G03710.1', 'AT5G03650.1', 'AT2G42740.1', 'AT4G19006.1;AT5G45620.1;AT5G45620.2', 'AT3G63140.1', 'AT5G61130.1', 'AT1G09430.1', 'AT1G33120.1;AT4G10450.1', 'AT1G20200.1;AT1G75990.1', 'AT3G18190.1', 'AT5G36160.1', 'AT2G37760.1', 'AT1G12270.1', 'AT1G48630.1', 'AT1G76100.1', 'AT4G36800.1', 'AT2G42590.1;AT2G42590.2;AT2G42590.3', 'AT2G35490.1', 'AT1G04410.1;AT5G56720.1', 'AT1G62960.1', 'AT1G76450.1', 'AT4G02080.1', 'AT1G11430.1', 'AT1G75330.1', 'AT3G06580.1', 'AT5G28500.1;AT5G28500.2', 'AT3G60220.1', 'AT3G16850.1', 'AT1G18640.2', 'AT1G14685.1', 'AT5G35830.1', 'AT4G21280.1;AT4G21280.2', 'AT4G11030.1', 'AT1G76380.1', 'AT3G13235.3;AT3G13235.1', 'AT3G61400.1', 'AT5G42190.1', 'AT3G43980.1', 'AT5G38470.1;AT5G38470.2', 'AT4G08360.1', 'AT2G44920.2;AT2G44920.1', 'AT4G33640.1', 'AT2G47470.1;AT2G47470.2;AT2G47470.3;AT2G47470.4', 'AT1G77510.1', 'AT2G28605.1', 'AT5G64860.1', 'AT2G25080.1;AT2G31570.1;AT4G31870.1', 'AT2G42540.1', 'ATCG00840.1', 'AT5G43060.1', 'AT3G16240.1', 'AT3G57610.1', 'AT3G59020.1', 'AT2G38680.1', 'AT5G49460.1', 'AT2G28190.1', 'AT3G56310.1;AT3G56310.2', 'AT3G26900.1', 'AT3G26520.1', 'AT5G13350.1', 'AT3G44620.1', 'AT4G15210.1;AT4G15210.2', 'AT2G17036.1', 'AT4G02790.1', 'AT4G09320.1', 'AT5G65780.1', 'AT1G02305.1', 'AT1G27950.1', 'AT3G47650.1', 'AT3G13110.1', 'AT3G02630.1', 'AT4G31440.1', 'AT2G41200.1', 'AT2G02390.1;AT2G02380.1;AT2G02390.3', 'AT3G03890.1', 'AT2G42130.4;AT2G42130.1;AT2G42130.3;AT2G42130.5', 'AT3G52880.2;AT3G52880.1', 'AT5G60540.1', 'AT3G56650.1', 'AT1G70430.1', 'AT4G39260.1;AT4G39260.2;AT4G39260.4', 'AT1G43600.1;AT1G43610.1', 'AT5G26710.1', 'AT5G20630.1', 'AT5G01600.1', 'AT2G14260.1', 'AT3G02530.1', 'AT3G25860.1', 'AT1G64770.1;AT1G64770.2', 'AT1G16610.3', 'AT3G54900.1', 'AT1G79230.2', 'AT1G56140.1;AT1G56130.1', 'AT3G60440.1', 'AT1G06570.1;AT1G06570.2', 'AT2G23610.1;AT2G23580.1', 'AT3G51260.1;AT3G51260.2;AT5G66140.1', 'AT1G31710.1', 'AT5G63380.1', 'AT4G17830.1;AT4G17830.2', 'AT3G51320.1', 'AT3G10850.1', 'AT1G12310.1', 'AT3G19710.1', 'AT5G10560.1', 'AT1G78820.1', 'AT5G39730.1', 'AT1G25490.1', 'AT1G52510.1;AT1G52510.2', 'AT5G16130.1', 'AT1G80380.2;AT1G80380.1;AT1G80380.3', 'AT5G55070.1', 'AT3G16640.1;AT3G05540.1', 'AT2G35370.1', 'AT2G23120.1', 'AT2G21500.1', 'AT1G17000.1', 'AT5G41540.1', 'AT1G13440.1;AT1G13440.2', 'AT5G42740.1', 'AT3G23940.1', 'AT3G20630.1', 'AT5G54310.1', 'AT3G44190.1', 'AT5G23820.1', 'AT2G26590.1', 'AT5G17050.1;AT5G17040.1', 'AT1G64190.1', 'AT2G02100.1', 'AT1G29250.1', 'AT1G75280.1;AT1G75290.1', 'AT5G52240.1', 'AT4G20900.1', 'AT2G30060.1', 'AT1G19130.1', 'AT1G24020.1', 'AT1G44820.1', 'AT5G60790.1', 'AT4G13430.1', 'AT2G29290.2;AT2G29290.1', 'AT3G44860.1;AT3G44870.1', 'AT4G27560.1;AT4G27570.1', 'AT4G24830.1;AT4G24830.2', 'AT4G17520.1', 'AT5G47930.1', 'AT4G36195.1;AT4G36190.1;AT4G36195.2', 'AT1G70820.1', 'AT1G55930.1', 'AT3G49680.2;AT3G49680.1', 'AT5G49650.1;AT5G49650.2', 'AT1G56560.1', 'AT2G26740.1;AT2G26750.1;AT4G15955.1', 'AT3G02780.1', 'AT2G16270.1', 'AT5G66720.1', 'AT3G11930.1', 'AT5G26667.1', 'AT5G05780.1;AT3G11270.1;AT3G11270.2;AT5G05780.2', 'AT3G54400.1', 'AT1G77090.1', 'AT5G20250.4', 'AT1G62130.1', 'AT4G23670.1;AT2G01520.1;AT2G01530.1;AT4G14060.1', 'AT5G10200.1', 'AT1G13690.1', 'AT4G25100.1;AT4G25100.4', 'AT5G64350.1', 'AT2G42910.1', 'AT4G31530.1;AT4G31530.2', 'AT1G22840.1;AT1G22840.2;AT4G10040.1', 'AT1G07750.1', 'AT3G27925.1', 'AT5G06580.1', 'AT3G14930.1;AT3G14930.3', 'AT1G18070.1;AT1G18070.3', 'AT2G37600.1', 'AT1G20020.1;AT1G20020.2;AT1G20020.3', 'AT2G45440.1', 'AT1G15750.1;AT1G80490.1;AT3G15880.1', 'AT1G72610.1', 'AT5G20230.1', 'AT5G22510.1;AT3G05820.1', 'AT1G14250.1;AT1G14230.1;AT1G14240.1', 'AT4G33580.1', 'AT3G10060.1', 'AT1G20340.1', 'AT3G01340.1', 'AT1G33600.1', 'AT3G60770.1;AT4G00100.1', 'AT3G46100.1', 'AT3G62250.1;AT1G23410.1;AT1G31340.1', 'AT3G48190.1', 'AT3G16950.1', 'AT2G15620.1', 'AT1G23890.2', 'AT5G19855.1', 'AT5G11450.1', 'AT3G48730.1', 'AT1G10670.1;AT1G60810.1', 'AT2G42490.1', 'AT1G17160.1', 'ATCG00470.1', 'AT2G29340.1;AT2G29340.3', 'AT2G26670.1;AT1G69720.2;AT2G26670.2', 'AT1G74100.1', 'AT3G13490.1', 'AT1G78060.1', 'AT1G63640.1', 'AT3G53200.1', 'AT3G26060.1', 'AT3G12800.1', 'AT2G18700.1', 'AT2G22480.1', 'AT1G56500.1', 'AT3G04790.1', 'AT4G01480.1', 'AT1G27130.1;AT1G27140.1', 'AT1G66280.1', 'AT2G38270.1', 'AT1G29670.1', 'AT1G63660.1;AT1G63660.2', 'AT3G62120.1', 'AT1G79230.1', 'AT1G53240.1', 'AT4G11150.1;AT1G64200.1;AT3G08560.1', 'AT2G17120.1', 'AT4G34670.1', 'AT1G09780.1', 'AT3G15450.1;AT3G15450.2', 'AT5G14660.1', 'AT4G29010.1', 'AT1G18140.1', 'AT1G71730.1', 'AT5G59300.1;AT3G46460.1', 'AT5G06290.1', 'AT5G35590.1', 'AT1G51760.1', 'AT1G48090.1', 'AT1G62380.1;AT1G12010.1', 'AT1G65930.1;AT1G54340.1', 'AT3G53420.1;AT2G16850.1', 'AT4G37980.1;AT4G37980.2', 'AT4G18440.1', 'AT4G36490.1', 'AT4G34870.1', 'AT2G39020.1', 'AT1G70810.1', 'AT1G30910.1', 'AT1G12900.1', 'AT2G04842.1', 'AT3G04870.1', 'AT4G00570.1', 'AT1G13520.1', 'AT1G11860.1', 'AT4G36400.1', 'AT3G25770.1;AT1G13280.1', 'AT2G30695.1', 'AT3G06610.1', 'AT5G66550.1;AT2G25500.1', 'AT1G27450.1;AT1G27450.3;AT1G80050.1', 'AT2G34480.1;AT1G29965.1;AT1G29970.2', 'AT1G58380.1;AT3G57490.1', 'AT5G43500.1', 'AT3G04840.1', 'AT2G41530.1', 'AT1G59700.1', 'AT2G17870.1', 'AT1G26630.1;AT1G13950.1;AT1G26630.2', 'AT2G31750.1', 'AT2G14170.1;AT2G14170.2;AT2G14170.3', 'AT1G66200.1;AT1G66200.2;AT1G66200.3', 'AT1G11660.1', 'AT1G07140.1', 'AT2G37220.1', 'AT1G22940.1', 'AT5G48220.1;AT5G48220.2', 'ATCG00670.1', 'AT4G05450.1;AT4G21090.1', 'AT5G64640.1', 'AT5G35170.1', 'AT2G28870.1', 'AT1G75690.1', 'AT3G45030.1;AT3G47370.1', 'AT2G39770.1', 'AT3G12930.1', 'AT1G54630.1', 'AT1G70890.1', 'AT1G70410.1;AT1G23730.1', 'AT2G42810.1;AT2G42810.2', 'AT1G05560.1', 'AT2G20890.1', 'AT3G20970.1;AT3G20970.2', 'AT2G45300.1', 'AT3G07310.1', 'AT1G12050.1', 'AT3G11710.1', 'AT5G03350.1', 'AT3G58990.1', 'AT4G00620.1;AT4G00600.1', 'AT4G34120.1', 'AT1G27385.2;AT1G27385.1;AT1G27385.4', 'AT1G54580.1', 'AT3G51000.1', 'AT3G10520.1', 'AT5G63570.1', 'AT5G65010.2;AT3G47340.1;AT5G10240.2;AT5G65010.1', 'AT1G74990.1', 'AT3G05180.1', 'AT1G13320.1', 'AT1G48850.1;AT1G48850.2', 'AT3G55040.1', 'AT3G47560.2;AT3G47590.1', 'AT3G47100.1', 'AT4G13360.1']
for bing in samengevoegd:
    Lange_string = Lange_string + bing

accessiecodesjes = re.findall(patterntje, Lange_string)

df_kr_eiwitten = [c for c in accessiecodesjes if c in df_kr_eiwitten]
df_dd_eiwitten = [c for c in accessiecodesjes if c in df_dd_eiwitten]
df_mpk3_eiwitten = [c for c in accessiecodesjes if c in df_mpk3_eiwitten]
df_mpk6_eiwitten = [c for c in accessiecodesjes if c in df_mpk6_eiwitten]

Concensusproteoom = [c for c in df_kr_eiwitten if c in df_dd_eiwitten or df_mpk3_eiwitten or df_mpk6_eiwitten]

print("Dit is een lijst met het Concensusproteoom" ,Concensusproteoom)

print("\nHier is het in een lijstje")
for d in Concensusproteoom:
    print(d)
    
print("\nNu komen de unieke eiwitten")

Uniek_kr = [c for c in df_kr_eiwitten if c not in df_dd_eiwitten or df_mpk3_eiwitten or df_mpk6_eiwitten]
Uniek_dd = [c for c in df_dd_eiwitten if c not in df_kr_eiwitten or df_mpk3_eiwitten or df_mpk6_eiwitten]
Uniek_mpk3 = [c for c in df_mpk3_eiwitten if c not in df_dd_eiwitten or df_kr_eiwitten or df_mpk6_eiwitten]
Uniek_mpk6 = [c for c in df_mpk6_eiwitten if c not in df_dd_eiwitten or df_mpk3_eiwitten or df_kr_eiwitten]

print("Dit is uniek_kr")
for e in Uniek_kr:
    print(e)
print("Dit is uniek_dd")
for f in Uniek_dd:
    print(f)
print("Dit is uniek_mpk3")
for g in Uniek_mpk3:
    print(g)
print("Dit is uniek_mpk6")
for h in Uniek_mpk6:
    print(h)

print("Dit is df_kr_eiwitten")    
for e in df_kr_eiwitten:
    print(e)
print("Dit is df_dd_eiwitten")
for f in df_dd_eiwitten:
    print(f)
print("Dit is df_mpk3_eiwitten")
for g in df_mpk3_eiwitten:
    print(g)
print("Dit is df_mpk6_eiwitten")
for h in df_mpk6_eiwitten:
    print(h)    
    


# Hier vindt het filteren plaats (nu moet Anova (p kleiner dan 0.01) zijn).
# De resultaten op verkregen op tijdstip 0h zullen verworpen worden.
# Resultaten met een confidence score van 50 of lager worden ook verworpen.

# Hier worden de Anova's gefilterd met p onder 0.01 met een regex?

# In[89]:

import re

y = 0

"""for x in Excellijst:
    string = ""
    for ding in str(x):
        string = string + ding
    print(string)
    regex = r'([0-9]\,[0-9]{2}E\-[0-9]{1}\w+)'
    pattern = re.compile(regex) 
    p_waardes = re.findall(pattern, string)
    print('Dit is de Anova(p)', Excellijstnamen[y], 'lijst' ,p_waardes)
    y += 1
"""
for e in Excellijst:
    Anovas = e['Anova (p)']
    lijstano = []
    for g in Anovas:
        if g < 0.01:
            lijstano.append(g)
#print(lijstano)


# 

# In[ ]:




# Hier worden de resultaten met een conf score (confidence) van 50 of lager gefilterd (kan niet met een regex)

# In[88]:

"""
import re

y = 0

for x in Excellijst:
    string = ""
    for ding in str(x):
        string = string + ding
    #print(string)
    regex = r'([0-9]\,[0-9]{2}E\-[0-9]{1}\w+)'
    pattern = re.compile(regex) 
    accessiecodes = re.findall(pattern, string)
    print('Dit is de Anova(p)', Excellijstnamen[y], 'lijst' ,accessiecodes)
    y += 1
"""

for e in Excellijst:
    confis = e['Conf score']
    lijstconf = []
    for g in Anovas:
        if g < 0.01:
            lijstconf.append(g)
#print(lijstconf)


# Wat is ['RPL2.1', 'ATPDX1.1', 'PDX1.1'] hierboven op het eind van df_mpk6 en ATPM24.1 in df_mpk3? -Deze zijn eruit gegooit (de regex was niet perfect)

# In[69]:

"""
#Ik ga even wat aangepaste lijsten gebruiken <deze zijn nog niet gefilterd>
df_kr_eiwitten = ['ATCG00490.1', 'AT2G07732.1', 'ATMG00280.1', 'AT4G33010.1', 'AT4G33010.2', 'AT5G17920.1', 'AT2G43800.1', 'AT5G20980.1', 'AT2G26080.1', 'AT4G29060.1', 'AT4G29060.2', 'AT4G37930.1', 'AT5G26780.1', 'AT5G25980.2', 'AT5G25980.1', 'AT4G24280.1', 'AT3G29320.1', 'AT2G05710.1', 'AT3G52930.1', 'AT3G26650.1', 'AT2G36530.1', 'AT4G24620.1', 'AT4G24620.2', 'AT1G66200.1', 'AT1G66200.2', 'AT1G66200.3', 'AT1G79920.1', 'AT1G79930.1', 'AT3G08590.1', 'AT3G04120.1', 'AT3G46970.1', 'AT3G09840.1', 'AT3G53230.1', 'AT2G24200.1', 'AT2G24200.3', 'AT3G09820.1', 'AT3G09820.2', 'AT3G52880.1', 'AT1G57720.1', 'AT1G09780.1', 'AT4G20850.1', 'AT4G21280.1', 'AT4G21280.2', 'AT1G16080.1', 'AT3G15450.1', 'AT3G05180.1', 'AT3G10020.1', 'AT2G46440.1', 'AT5G49070.1', 'AT1G57980.1', 'AT2G43590.1', 'AT5G08380.1', 'AT5G15050.1', 'AT1G79790.1', 'AT3G01440.1', 'AT5G52960.1', 'AT5G16760.1', 'AT5G64250.1', 'AT2G37470.1', 'AT1G07790.1', 'AT3G53650.1', 'AT5G24400.1', 'AT2G41430.1', 'AT2G35410.1', 'AT5G15970.1', 'AT4G28300.1', 'AT1G11660.1', 'AT5G20250.4', 'AT5G20250.1', 'AT2G25070.1', 'AT5G21100.1', 'AT1G15930.1', 'AT1G15750.1', 'AT1G36320.1', 'AT1G49975.1', 'AT5G16840.1', 'AT1G53520.1'] 
df_dd_eiwitten = ['AT1G66700.1', 'AT1G66690.1', 'AT1G66700.3', 'AT2G45220.1', 'AT4G02300.1', 'AT5G20830.1', 'AT5G63680.1', 'AT5G17990.1', 'AT2G02010.1', 'AT2G02000.1', 'AT3G24503.1', 'AT5G48540.1', 'AT5G38900.1', 'AT4G30530.1', 'AT4G30550.1', 'AT1G67980.1', 'AT1G67980.2', 'AT2G04400.1', 'AT2G29350.3', 'AT2G29350.1', 'AT5G54500.1', 'AT5G54500.2', 'AT2G21620.1', 'AT2G21620.2', 'AT5G20960.1', 'AT5G56350.1', 'AT4G26390.1', 'AT1G74590.1', 'AT1G26390.1', 'AT2G34810.1', 'AT5G39050.1', 'AT1G10700.1', 'AT5G05730.1', 'AT2G29690.1', 'AT5G05730.2', 'AT1G02930.1', 'AT1G18070.1', 'AT5G40760.1', 'AT2G24200.1', 'AT2G24200.3', 'AT3G13790.1', 'AT3G13790.2', 'AT3G02360.1', 'AT1G09130.3', 'AT1G09130.1', 'AT4G14100.1', 'AT1G63940.1', 'AT1G63940.2', 'AT1G63940.3', 'AT1G63940.4', 'AT5G07460.1', 'AT3G01120.1', 'AT4G05523.1', 'AT1G11860.1', 'AT5G58720.1', 'AT3G28720.1', 'AT1G10370.1', 'AT1G12520.1', 'AT1G12520.3', 'AT5G35790.1', 'AT3G10060.1', 'AT3G52300.1', 'AT4G25100.1', 'AT4G25100.4', 'AT4G37930.1', 'AT3G13920.1', 'AT3G13920.2', 'AT2G05920.1', 'AT1G16210.1', 'AT5G53380.1', 'AT5G18100.1', 'AT1G78060.1', 'AT2G20860.1', 'AT2G42530.1', 'AT4G21280.1', 'AT4G21280.2', 'AT5G55280.1', 'AT4G28490.1', 'AT5G02960.1', 'AT3G09680.1', 'AT3G15690.2', 'AT3G15690.1', 'AT1G01080.1', 'AT1G01080.2']
df_mpk3_eiwitten = ['AT1G02930.1', 'AT5G48540.1', 'AT1G24190.1', 'AT5G38900.1', 'AT5G54500.1', 'AT5G54500.2', 'AT1G65970.1', 'AT1G60740.1', 'AT5G17990.1', 'AT4G02520.1', 'AT2G02930.1', 'AT5G39050.1', 'AT1G02920.1', 'AT1G23730.1', 'AT2G43590.1', 'AT2G04400.1', 'AT3G54640.1', 'AT2G24200.1', 'AT2G24200.3', 'AT4G36380.1', 'AT4G37910.1', 'AT2G43570.1', 'AT5G54810.1', 'AT5G11670.1', 'AT2G19900.1', 'AT2G01250.1', 'AT2G01250.2', 'AT1G21130.1', 'AT1G21130.2', 'AT2G02010.1', 'AT2G02000.1', 'AT5G17330.1', 'AT3G24503.1', 'AT3G14990.1', 'AT3G14990.2', 'AT5G59420.1', 'AT3G09300.1', 'AT3G16530.1', 'AT2G37760.1', 'AT2G37760.3', 'AT4G38510.1', 'AT1G06000.1', 'AT2G17265.1', 'AT4G28706.1', 'AT2G19730.1', 'AT4G29410.1', 'AT1G66100.1', 'AT1G49980.1', 'AT4G15210.1', 'AT4G15210.2', 'AT1G20620.1', 'AT1G20620.2', 'AT1G20620.4', 'AT3G19130.1', 'AT3G18890.1', 'AT3G11940.1', 'AT2G37270.1', 'AT4G33640.1', 'AT4G19410.1', 'AT4G19410.2', 'AT4G00620.1', 'AT1G79720.1', 'AT1G07700.1', 'AT1G07700.3', 'AT3G11510.1', 'AT3G52580.1', 'AT2G37190.1', 'AT3G53430.1', 'AT5G60670.1', 'AT4G25100.1', 'AT4G25100.4', 'AT3G53740.1', 'AT2G37600.1', 'AT3G45140.1', 'AT5G63380.1', 'AT5G38480.1', 'AT5G38480.2', 'AT5G58250.1', 'AT5G03350.1', 'AT2G42910.1', 'AT4G30870.1', 'AT2G42130.3', 'AT4G27000.1']
df_mpk6_eiwitten = ['AT5G17870.1', 'ATCG00830.1', 'AT2G38230.1', 'AT2G38210.1', 'AT3G16050.1', 'AT4G39800.1', 'AT2G22240.1', 'AT3G13460.1', 'AT3G13460.3', 'AT3G13460.4', 'AT5G61020.1', 'ATCG00780.1', 'AT1G02930.1', 'AT5G13510.1', 'AT3G24503.1', 'AT1G02920.1', 'AT2G43030.1', 'AT5G49030.3', 'AT5G49030.2', 'ATCG01120.1', 'ATCG00660.1', 'AT4G34620.1', 'AT2G05710.1', 'AT1G05190.1', 'AT1G05010.1', 'AT1G69740.1', 'AT1G44318.1', 'AT3G48560.1', 'AT3G26740.1', 'AT3G51160.1', 'AT5G66280.1', 'AT1G74970.1', 'AT3G56910.1', 'AT3G09840.1', 'AT3G53230.1', 'AT5G13650.1', 'AT5G20720.1', 'AT1G37130.1', 'AT3G12930.1', 'AT1G54630.1', 'AT1G70890.1', 'AT1G70410.1', 'AT1G23730.1', 'AT2G42810.1', 'AT2G42810.2', 'AT1G05560.1', 'AT2G20890.1', 'AT3G20970.1', 'AT3G20970.2', 'AT2G45300.1', 'AT3G07310.1', 'AT1G12050.1', 'AT3G11710.1', 'AT5G03350.1', 'AT3G58990.1', 'AT4G00620.1', 'AT4G00600.1', 'AT4G34120.1', 'AT1G27385.2', 'AT1G27385.1', 'AT1G27385.4', 'AT1G54580.1', 'AT3G51000.1', 'AT3G10520.1', 'AT5G63570.1', 'AT5G65010.2', 'AT3G47340.1', 'AT5G10240.2', 'AT5G65010.1', 'AT1G74990.1', 'AT3G05180.1', 'AT1G13320.1', 'AT1G48850.1', 'AT1G48850.2', 'AT3G55040.1', 'AT3G47560.2', 'AT3G47590.1', 'AT3G47100.1', 'AT4G13360.1']

#Hier zijn de lijsten die gefilterd zijn
#df_kr_eiwitten =
#df_dd_eiwitten =
#df_mpk3_eiwitten =
#df_mpk6_eiwitten =

#f = lambda i: i in [df_dd_eiwitten,df_mpk3_eiwitten,df_mpk6_eiwitten]
#new_lijst = list(filter(f, df_kr_eiwitten))
#print(new_lijst)

Concensusproteoom = [c for c in df_kr_eiwitten if c in df_dd_eiwitten or df_mpk3_eiwitten or df_mpk6_eiwitten]

print("Dit is een lijst met het Concensusproteoom" ,Concensusproteoom)

print("\nHier is het in een lijstje")
for d in Concensusproteoom:
    print(d)
    
print("\nNu komen de unieke eiwitten")

Uniek_kr = [c for c in df_kr_eiwitten if c not in df_dd_eiwitten or df_mpk3_eiwitten or df_mpk6_eiwitten]
Uniek_dd = [c for c in df_dd_eiwitten if c not in df_kr_eiwitten or df_mpk3_eiwitten or df_mpk6_eiwitten]
Uniek_mpk3 = [c for c in df_mpk3_eiwitten if c not in df_dd_eiwitten or df_kr_eiwitten or df_mpk6_eiwitten]
Uniek_mpk6 = [c for c in df_mpk6_eiwitten if c not in df_dd_eiwitten or df_mpk3_eiwitten or df_kr_eiwitten]

print("Dit is uniek_kr")
for e in Uniek_kr:
    print(e)
print("Dit is uniek_dd")
for f in Uniek_dd:
    print(f)
print("Dit is uniek_mpk3")
for g in Uniek_mpk3:
    print(g)
print("Dit is uniek_mpk6")
for h in Uniek_mpk6:
    print(h)
"""


# In[90]:

data = pd.ExcelFile("D:\Bio-Infmap\data-tabel.xlsx")
#print(data.sheet_names)
df_data = data.parse("Sample overzicht", skiprow=2)
df_data.head()


# In[10]:

df_data.info()

